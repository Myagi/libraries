{"version":3,"file":"fraql.cjs.js","sources":["../node_modules/xtend/immutable.js","../src/transform.js","../src/fraql.js"],"sourcesContent":["module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","import { print, Source } from 'graphql/language'\nimport extend from 'xtend'\n\nfunction inlineSpreadFragments(fragmentDefinitions, definition) {\n  if (definition.kind === 'FragmentSpread') {\n    return fragmentDefinitions.find(\n      ({ name }) => name.value === definition.name.value,\n    )\n  }\n  if (!definition.selectionSet) {\n    return definition\n  }\n\n  definition.selectionSet = extend(definition.selectionSet, {\n    selections: definition.selectionSet.selections.map(selection =>\n      inlineSpreadFragments(fragmentDefinitions, selection),\n    ),\n  })\n\n  return definition\n}\n\nexport function toInlineFragment(doc) {\n  let definitions = doc.definitions.map(definition => {\n    if (definition.kind !== 'FragmentDefinition') {\n      throw new Error(\n        `fraql: toInlineFragment must be called on a document that only contains fragments`,\n      )\n    }\n\n    return {\n      kind: 'InlineFragment',\n      name: definition.name,\n      directives: definition.directives,\n      selectionSet: definition.selectionSet,\n      typeCondition: definition.typeCondition,\n    }\n  })\n\n  definitions = definitions.map(definition =>\n    inlineSpreadFragments(definitions, definition),\n  )\n\n  const definition = definitions[0]\n\n  if (!definition) {\n    throw new Error('Unable to find a fragment definition')\n  }\n\n  const newDoc = extend(doc, {\n    originalDocument: doc,\n    definitions: [definition],\n  })\n\n  newDoc.loc = extend(doc.loc, {\n    source: new Source(print(newDoc)),\n  })\n\n  return newDoc\n}\n","import gql, { disableFragmentWarnings } from 'graphql-tag'\nimport { toInlineFragment } from './transform'\n\nconst fraql = (...args) => {\n  disableFragmentWarnings()\n\n  const doc = gql(...args)\n\n  if (doc.definitions.every(({ kind }) => kind === 'FragmentDefinition')) {\n    return toInlineFragment(doc)\n  }\n\n  return doc\n}\n\nexport default fraql\n"],"names":["module","extend","hasOwnProperty","Object","prototype","target","i","arguments","length","source","key","call","inlineSpreadFragments","fragmentDefinitions","definition","kind","find","name","value","selectionSet","selections","map","selection","toInlineFragment","doc","definitions","Error","directives","typeCondition","newDoc","loc","Source","print","fraql","gql","every"],"mappings":";;;;;;;;;;AAAAA,aAAA,GAAiBC,MAAjB;;AAEA,IAAIC,iBAAiBC,OAAOC,SAAP,CAAiBF,cAAtC;;AAEA,SAASD,MAAT,GAAkB;QACVI,SAAS,EAAb;;SAEK,IAAIC,IAAI,CAAb,EAAgBA,IAAIC,UAAUC,MAA9B,EAAsCF,GAAtC,EAA2C;YACnCG,SAASF,UAAUD,CAAV,CAAb;;aAEK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;gBAChBP,eAAeS,IAAf,CAAoBF,MAApB,EAA4BC,GAA5B,CAAJ,EAAsC;uBAC3BA,GAAP,IAAcD,OAAOC,GAAP,CAAd;;;;;WAKLL,MAAP;;;ACdJ,SAASO,qBAAT,CAA+BC,mBAA/B,EAAoDC,UAApD,EAAgE;MAC1DA,WAAWC,IAAX,KAAoB,gBAAxB,EAA0C;WACjCF,oBAAoBG,IAApB,CACL;UAAGC,IAAH,QAAGA,IAAH;aAAcA,KAAKC,KAAL,KAAeJ,WAAWG,IAAX,CAAgBC,KAA7C;KADK,CAAP;;MAIE,CAACJ,WAAWK,YAAhB,EAA8B;WACrBL,UAAP;;;aAGSK,YAAX,GAA0BlB,UAAOa,WAAWK,YAAlB,EAAgC;gBAC5CL,WAAWK,YAAX,CAAwBC,UAAxB,CAAmCC,GAAnC,CAAuC;aACjDT,sBAAsBC,mBAAtB,EAA2CS,SAA3C,CADiD;KAAvC;GADY,CAA1B;;SAMOR,UAAP;;;AAGF,AAAO,SAASS,gBAAT,CAA0BC,GAA1B,EAA+B;MAChCC,cAAcD,IAAIC,WAAJ,CAAgBJ,GAAhB,CAAoB,sBAAc;QAC9CP,WAAWC,IAAX,KAAoB,oBAAxB,EAA8C;YACtC,IAAIW,KAAJ,qFAAN;;;WAKK;YACC,gBADD;YAECZ,WAAWG,IAFZ;kBAGOH,WAAWa,UAHlB;oBAISb,WAAWK,YAJpB;qBAKUL,WAAWc;KAL5B;GAPgB,CAAlB;;gBAgBcH,YAAYJ,GAAZ,CAAgB;WAC5BT,sBAAsBa,WAAtB,EAAmCX,UAAnC,CAD4B;GAAhB,CAAd;;MAIMA,aAAaW,YAAY,CAAZ,CAAnB;;MAEI,CAACX,UAAL,EAAiB;UACT,IAAIY,KAAJ,CAAU,sCAAV,CAAN;;;MAGIG,SAAS5B,UAAOuB,GAAP,EAAY;sBACPA,GADO;iBAEZ,CAACV,UAAD;GAFA,CAAf;;SAKOgB,GAAP,GAAa7B,UAAOuB,IAAIM,GAAX,EAAgB;YACnB,IAAIC,eAAJ,CAAWC,eAAMH,MAAN,CAAX;GADG,CAAb;;SAIOA,MAAP;;;ACvDF,IAAMI,QAAQ,SAARA,KAAQ,GAAa;;;MAGnBT,MAAMU,wCAAZ;;MAEIV,IAAIC,WAAJ,CAAgBU,KAAhB,CAAsB;QAAGpB,IAAH,QAAGA,IAAH;WAAcA,SAAS,oBAAvB;GAAtB,CAAJ,EAAwE;WAC/DQ,iBAAiBC,GAAjB,CAAP;;;SAGKA,GAAP;CATF;;;;;"}